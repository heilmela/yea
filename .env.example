###############
#   The example config (.env) file which is used by the application and 
#   has to be located at the root folder above /src or build/
#   It has to be named .env any other .env.* will not be picked
#   The given values are for mot common development cases 
################


###############
# Application Configuration
###############
# The Port on which the application is running 
APP_PORT=4000

# The host name on which the application is running 
APP_HOST=localhost


# Prefix for the api route, can be empty for running on the root path
APP_PREFIX=api


###############
# Authentication Configuration
###############
# The secret which is used to produce JWTs for refresh and auth tokens
AUTH_SECRET=riohnq2g3p95aenl;fjigvbnbzdfvb


# Expiration for the auth token can be given in (hour) h| 'second': s
# -- OR
# A JSON numeric value representing the number of seconds 
# from 1970-01-01T00:00:00Z UTC
# Reference the IEEE Std 1003.1, 2013 each day is accounted for by 
# exactly 86400 seconds
# i.e Math.floor(Date.now() / 1000) + (60 * 60) is one hour
AUTH_TOKEN_EXPIRATION=15m


###############
# Database Configuration
##############
# The name of the mongo database 
# This value is picked up by the docker-compose-db.yml (and others) 
# to create the db and
# this value is used by the server to connect to a database
MONGO_INITDB_DATABASE=yea_database


# The name of the root user at the mongo server 
# This value is picked up by the docker-compose-db.yml (and others)
# to create the db
# It is NOT used by the application in order to authenticate to the db
MONGO_INITDB_ROOT_USERNAME=admin


# The password of the root user at the mongo server 
# This value is picked up by the docker-compose-db.yml (and others)
# to create the db
# It is NOT used by the application in order to authenticate to the db
MONGO_INITDB_ROOT_PASSWORD=q234g[iornga;zkvn]


# The name of the user which is used by the server in order to authenticate
# at the database server
# This value is picked up by the docker-compose-db.yml (and others)
# to create the user at MONGO_INITDB_DATABASE
# specify DB_USER=MONGO_INITDB_ROOT_USERNAME if you need to 
# authenticate with the root user 
# this can happen when the database is not seed and there is no other user
DB_USER=backend


# The password used for for DB_USER 
# This value will be used by the application to connect to the database server
DB_PASSWORD=13rasdeofvbkpasdfb


# Host of the database server
# This value will be used by the application server to connect to the database server
# Set DB_HOST=database if the database server is run as a service (e.g. the compose-dev)
# where database is the name of the docker service (the service is reachable inside the docker networking)
# If the database is reachable by the docker-compose-db it exposed the service to localhost
DB_HOST=localhost


# Port of the database server
# This value will be picked up by any docker file to configure the port exposed 
# This value will be used by the application server in order to connect to the
# database server
DB_PORT=27017


# Authentication Database which is used by the backend to authenticate at the
# database server 
# DB_AUTH=admin uses the admin database in order to authenticate, use this value
# in case the application should authenticate as root
# DB_AUTH=MONGO_INITDB_DATABASE if there is a user created which can be used by the app
# (DB_USER) was created at startup (if init.sh can be run by the environment)
DB_AUTH=admin


###############
# Test Configuration
##############
# Flag which determines if the data created by integration test is wiped 
# Use this to prevent the tests final tear down with TEST_PERSIST=true
# and all data is kept
# TEST_PERSIST=false removes all data after tests are executed
TEST_PERSIST=false




